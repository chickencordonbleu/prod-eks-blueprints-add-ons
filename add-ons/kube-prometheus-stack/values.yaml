kube-prometheus-stack:
  crds:
    enabled: true
  defaultRules:
    create: true
    rules:
      etcd: false
      kubeScheduler: false
  grafana:
    enabled: true
    defaultDashboardsEnabled: true
    defaultDashboardsTimezone: "Asia/Dubai"
    adminPassword: prom-operator
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
        external-dns.alpha.kubernetes.io/hostname: grafana.prod.openinnovation.ai
        cert-manager.io/cluster-issuer: acme-clusterissuer
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      hosts:
        - grafana.prod.openinnovation.ai
      path: /
      tls:
        - hosts:
          - grafana.prod.openinnovation.ai
          secretName: grafana.prod.openinnovation.ai-tls
  alertmanager:
    enabled: true
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
        external-dns.alpha.kubernetes.io/hostname: alertmanager.prod.openinnovation.ai
        cert-manager.io/cluster-issuer: acme-clusterissuer
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      hosts:
        - alertmanager.prod.openinnovation.ai
      paths:
        - /
      tls:
        - hosts:
            - alertmanager.prod.openinnovation.ai
          secretName: alertmanager.prod.openinnovation.ai-tls
      logFormat: logfmt
      logLevel: info
      replicas: 2
      retention: 120h
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: ""
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi
      resources:
        requests:
          cpu: 50m
          memory: 40Mi
        limits:
          cpu: 300m
          memory: 65Mi
      podAntiAffinity: soft
  kubeApiServer:
    enabled: true        
  kubelet:
    enabled: true
    namespace: kube-system        
  kubeControllerManager:
    enabled: false
  coreDns:
    enabled: true
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeProxy:
    enabled: true
  kubeStateMetrics:
    enabled: true
  nodeExporter:
    enabled: true
  prometheusOperator:
    enabled: true
    tls:
      enabled: true
    admissionWebhooks:
      enabled: true
      failurePolicy: Ignore
      patch:
        enabled: false
      certManager:
        enabled: true
        issuerRef:
          name: "prometheus-self-signed-issuer"
          kind: "Issuer"
  prometheus:
    service:
      type: ClusterIP
      annotations: {}
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
        external-dns.alpha.kubernetes.io/hostname: prometheus.prod.openinnovation.ai
        cert-manager.io/cluster-issuer: acme-clusterissuer
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      hosts:
        - prometheus.prod.openinnovation.ai
      paths:
        - /
      tls:
        - hosts:
            - prometheus.prod.openinnovation.ai
          secretName: prometheus.prod.openinnovation.ai-tls
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    prometheusSpec:
      retention: 30d
      retentionSize: ""
      replicas: 2
      logLevel: info
      logFormat: logfmt
      podAntiAffinity: soft
      resources:
        requests:
          cpu: 300m
          memory: 1Gi
        limits:
          cpu: 500m
          memory: 1500Mi
      storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi